generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String               @id @default(uuid())
  username      String               @unique @db.VarChar(50)
  password      String               @db.VarChar()
  email         String               @unique @db.VarChar(50)
  is_verified   Boolean              @default(false)
  firstname     String               @db.VarChar()
  lastname      String               @db.VarChar()
  created_at    DateTime             @default(now())
  updated_at    DateTime             @default(now())
  role          UserRole             @default(USER)
  messages      Message[]
  conversations ConversationMember[]
}

enum ConversationType {
  PRIVATE
  GROUP
}

model Conversation {
  id         String               @id @default(uuid())
  created_at DateTime             @default(now())
  updated_at DateTime             @default(now())
  type       ConversationType
  messages   Message[]
  members    ConversationMember[]
}

model Message {
  id              String       @id @default(uuid())
  content         String       @db.Text
  created_at      DateTime     @default(now())
  sender_id       String
  sender          User         @relation(fields: [sender_id], references: [id])
  conversation_id String
  conversation    Conversation @relation(fields: [conversation_id], references: [id])
}

model ConversationMember {
  joined_at       DateTime     @default(now())
  conversation_id String
  conversation    Conversation @relation(fields: [conversation_id], references: [id])
  user_id         String
  user            User         @relation(fields: [user_id], references: [id])

  @@id([conversation_id, user_id])
}
